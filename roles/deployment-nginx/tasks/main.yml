---
- name: Gather ec2 facts
  ec2_facts:
  when: dc_env == "aws"

- name: Remove instance from ELB
  local_action:
    module: ec2_elb
    instance_id: "{{ansible_ec2_instance_id}}"
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{ansible_ec2_placement_region}}"
    state: absent
  when: dc_env == "aws"

- name: Stop Nginx
  service: name=nginx state=stopped

- name: Deploy
  git: repo={{project_repo}} dest={{project_doc_root}} accept_hostkey=yes version={{branch_name}} force=yes
  tags:
    - deployment

- name: Set file permissions
  file: path={{project_doc_root}} mode=0755 owner=www-data group=www-data recurse=yes
  tags:
    - deployment

- name: Update Nginx configuration and deployment info
  template: src={{item.src}} dest={{item.dest}}
  with_items:
    - { src: deployment_info.j2, dest: /usr/share/nginx/deployment_info/deployment_info.json }
    - { src: virtualhost.j2, dest: /etc/nginx/sites-available/default }
    - { src: virtualhost.j2, dest: /etc/nginx/sites-enabled/default }
    - { src: virtualhost_ssl.j2, dest: /etc/nginx/sites-available/default-ssl }
    - { src: virtualhost_ssl.j2, dest: /etc/nginx/sites-enabled/default-ssl }
  tags:
    - nginx-virtualhost-configuration

- name: Start Nginx
  service: name=nginx state=started

- name: Attach instance from ELB
  local_action:
    module: ec2_elb
    instance_id: "{{ansible_ec2_instance_id}}"
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{ansible_ec2_placement_region}}"
    ec2_elbs: "{{item}}"
    wait: yes
    wait_timeout: 60
    state: present
  when: dc_env == "aws"
  with_items: ec2_elbs
